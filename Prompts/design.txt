Let comfirm target
1. Create Analyzer tools that can analyse binary protocol (DO NOT ASSUME Text protocol)
   1.1 The Log data file can be in HEX only format, HEX/Text format and Text Only format 
       - For HEX only format it contains something look like below example 
         so when read this type of file we need to handle each hex code value as single byte 
       ---------------------------------------------------------------------------------
        5E 4B 4A 49 4B 30 30 30 0D 0A 32 30 32 33 2D 31    
        31 2D 30 37 0D 0A 31 37 3A 31 39 3A 32 36 0D 0A    
        20 20 30 2E 30 30 20 6B 67 0D 0A 20 20 31 2E 39    
        34 20 6B 67 0D 0A 30 0D 0A 30 0D 0A 20 20 31 2E    
        39 34 20 6B 67 0D 0A 20 20 31 2E 39 34 20 6B 67    
        0D 0A 20 20 20 20 30 20 70 63 73 0D 0A 20 0D 0A    
        20 0D 0A 45 0D 0A 7E 50 31 0D 0A                   
       ---------------------------------------------------------------------------------

       - For HEX/Text format it contains something look like below example 
         so when read this type of file we need to handle 2 seperate block (left/right)
         the right block should ignore. Then the left block handle same as HEX Only format 
       ---------------------------------------------------------------------------------
        5E 4B 4A 49 4B 30 30 30 0D 0A 32 35 2D 31 30 2D    ^KJIK000..25-10-
        32 30 32 35 0D 0A 30 31 3A 32 35 3A 31 36 0D 0A    2025..01:25:16..
        20 20 30 2E 30 30 20 6B 67 0D 0A 20 20 30 2E 30      0.00 kg..  0.0
        30 20 6B 67 0D 0A 30 0D 0A 30 0D 0A 20 20 30 2E    0 kg..0..0..  0.
        30 30 20 6B 67 0D 0A 20 20 30 2E 30 30 20 6B 67    00 kg..  0.00 kg
        0D 0A 20 20 20 20 30 20 70 63 73 0D 0A 20 0D 0A    ..    0 pcs.. ..
        20 0D 0A 45 0D 0A 7E 50 31 0D 0A 5E 4B 4A 49 4B     ..E...P1..^KJIK
        30 30 30 0D 0A 32 35 2D 31 30 2D 32 30 32 35 0D    000..25-10-2025.
        0A 30 31 3A 32 35 3A 31 36 0D 0A 20 20 30 2E 30    .01:25:16..  0.0
        30 20 6B 67 0D 0A 20 20 30 2E 30 30 20 6B 67 0D    0 kg..  0.00 kg.
        0A 30 0D 0A 30 0D 0A 20 20 30 2E 30 30 20 6B 67    .0..0..  0.00 kg
        0D 0A 20 20 30 2E 30 30 20 6B 67 0D 0A 20 20 20    ..  0.00 kg..   
        20 30 20 70 63 73 0D 0A 20 0D 0A 20 0D 0A 45 0D     0 pcs.. .. ..E.
        0A 7E 50 31 0D 0A 5E 4B 4A 49 4B 30 30 30 0D 0A    ..P1..^KJIK000..

       ---------------------------------------------------------------------------------

       - For Text Only format it contains something look like below example 
         so when read this type of file as actual byte[] also the Encoding need to check first 
         to make sure we read bytes correctly
       ---------------------------------------------------------------------------------
        ^KJIK000
        2023-11-07
        17:19:38
        0.00 kg
        1.94 kg
        0
        0
        1.94 kg
        1.94 kg
            0 pcs
        
        
        E
        ~P1

       ---------------------------------------------------------------------------------

2. When we get byte[] from Log data file we need to find protocol pattern to create definition file 
that we need to consider
   2.1 Log data may be Single Message or Multiple Messages so we need to use statistic occurance 
       of each byte pattern to find message StartMarker/EndMarker
   2.2 When we find each Message StartMarker/EndMarker next is to find how many session in each single message this also need 
       statistic occurance analysis to find pattern by compare all messages (in case we have multiple messages in Log data file). 
       When statistic analyse completed we should get segment terminal bytes to seperate each segment in the message block 
   2.3 Then in each segment it contains field (can be zero or more that 1 field in on segment)

PROBLEM in section 2:
   Currently the pattern analysis is not work properly then all message pattern, segment terminator, fields are still incorrect.
   That lead to how we can find proper pattern analysis or algorithms to solve this problem 

3. When complete analyzed create definition file as meduim to use as protocol emulator/terminal 
   3.1 For emulator 
     - We have Data class i.e. Weighting Data that when change weight property to allow input weight value 
     - Not the NDevice<T> class where T is Data class (from above) that load definition file and use the Data class properties to emulate protocol
   3.2 For terminal
     - We have NTerminal<T> where T is Data class and when assign definition file
     - When data arrive via serial communication it should use definition to extract protocol into field and update Data class property 
