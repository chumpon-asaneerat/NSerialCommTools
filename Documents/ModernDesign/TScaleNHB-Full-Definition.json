{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "version": "1.0",
  "lastUpdated": "2025-10-19",

  "deviceInfo": {
    "name": "TScaleNHB",
    "manufacturer": "Generic",
    "category": "scale",
    "model": "T-Scale NHB",
    "description": "T-Scale with status and mode indicators, unit attached to weight value",
    "complexity": "simple",
    "documentation": "Device-08-TScaleNHB.md"
  },

  "communication": {
    "baudRate": 9600,
    "dataBits": 8,
    "parity": "None",
    "stopBits": "One",
    "handshake": "None",
    "encoding": "ASCII",
    "readTimeout": 5000,
    "writeTimeout": 5000
  },

  "protocol": {
    "type": "continuous-stream",
    "format": "single-line-csv-compact",
    "encoding": "ASCII",
    "terminator": "\\r\\n",
    "packageSize": 1,
    "updateRate": "continuous",

    "structure": {
      "lines": [
        {
          "lineNumber": 1,
          "name": "WeightData",
          "type": "composite",
          "pattern": "^(\\w+),(\\w+)\\s+(\\d+\\.\\d+)(\\w+)\\s*",
          "required": true,
          "description": "Status, Mode, Weight+Unit (no space between weight and unit)",
          "fields": [
            {
              "name": "Status",
              "type": "string",
              "pattern": "\\w+",
              "values": ["ST", "US"],
              "description": "Status indicator: ST=Stable, US=Unstable"
            },
            {
              "name": "Mode",
              "type": "string",
              "pattern": "\\w+",
              "values": ["GS", "NT", "TR"],
              "description": "Mode: GS=Gross, NT=Net, TR=Tare"
            },
            {
              "name": "Weight",
              "type": "decimal",
              "pattern": "\\d+\\.\\d+",
              "format": "F1",
              "min": -9999.9,
              "max": 9999.9,
              "description": "Weight value (1 decimal place)"
            },
            {
              "name": "Unit",
              "type": "string",
              "pattern": "\\w+",
              "values": ["g", "kg"],
              "description": "Weight unit attached to value (no space)"
            }
          ]
        }
      ]
    }
  },

  "parsing": {
    "strategy": "single-line-csv-with-attached-unit",
    "description": "Split by comma, then parse weight with attached unit (no space)",

    "states": [
      {
        "id": 0,
        "name": "Idle",
        "description": "Waiting for data package",
        "action": "wait",
        "transition": {
          "condition": "detect-line-end",
          "nextState": 1
        }
      },
      {
        "id": 1,
        "name": "SplitByComma",
        "description": "Split line by comma to get Status, and Mode+Weight+Unit",
        "action": "split",
        "separator": ",",
        "expectedParts": 2,
        "transition": {
          "condition": "success",
          "nextState": 2,
          "onError": 0
        }
      },
      {
        "id": 2,
        "name": "ExtractStatus",
        "description": "Extract Status from first part",
        "action": "trim-and-assign",
        "field": "Status",
        "transition": {
          "condition": "always",
          "nextState": 3
        }
      },
      {
        "id": 3,
        "name": "SplitModeWeight",
        "description": "Split second part by space to get Mode and Weight+Unit",
        "action": "split-by-space",
        "expectedParts": 2,
        "transition": {
          "condition": "success",
          "nextState": 4
        }
      },
      {
        "id": 4,
        "name": "ExtractMode",
        "description": "Extract Mode",
        "action": "assign",
        "field": "Mode",
        "transition": {
          "condition": "always",
          "nextState": 5
        }
      },
      {
        "id": 5,
        "name": "SeparateWeightUnit",
        "description": "Separate weight value from unit (no space between them)",
        "action": "parse-numeric-suffix",
        "details": "Find where digits/decimal end and unit begins",
        "algorithm": "Scan backwards from end to find last digit or decimal point",
        "transition": {
          "condition": "success",
          "nextState": 6
        }
      },
      {
        "id": 6,
        "name": "ParseWeight",
        "description": "Parse weight decimal value",
        "action": "parse-decimal",
        "transition": {
          "condition": "success",
          "nextState": 7
        }
      },
      {
        "id": 7,
        "name": "Complete",
        "description": "Data successfully parsed",
        "action": "fire-event",
        "transition": {
          "condition": "always",
          "nextState": 0
        }
      }
    ],

    "errorHandling": {
      "onTimeout": "reset-to-idle",
      "onParseError": "reset-to-idle",
      "maxRetries": 3,
      "timeoutMs": 5000
    }
  },

  "validation": {
    "rules": [
      {
        "name": "WeightRange",
        "type": "range",
        "field": "W",
        "min": -9999.9,
        "max": 9999.9,
        "severity": "error",
        "message": "Weight must be between -9999.9 and 9999.9"
      },
      {
        "name": "UnitValid",
        "type": "enum",
        "field": "Unit",
        "values": ["g", "kg"],
        "severity": "error",
        "message": "Unit must be 'g' or 'kg'"
      },
      {
        "name": "StatusValid",
        "type": "enum",
        "field": "Status",
        "values": ["ST", "US"],
        "severity": "warning",
        "message": "Status should be ST (Stable) or US (Unstable)"
      },
      {
        "name": "ModeValid",
        "type": "enum",
        "field": "Mode",
        "values": ["GS", "NT", "TR"],
        "severity": "warning",
        "message": "Mode should be GS (Gross), NT (Net), or TR (Tare)"
      }
    ]
  },

  "output": {
    "dataClass": "TScaleNHBData",
    "properties": [
      {
        "name": "Status",
        "type": "string",
        "mapping": "Status",
        "default": "ST"
      },
      {
        "name": "Mode",
        "type": "string",
        "mapping": "Mode",
        "default": "GS"
      },
      {
        "name": "W",
        "type": "decimal",
        "mapping": "Weight"
      },
      {
        "name": "Unit",
        "type": "string",
        "mapping": "Unit",
        "default": "g"
      }
    ],
    "eventTrigger": "LineComplete",
    "eventName": "DataReceived"
  },

  "testing": {
    "testCases": [
      {
        "name": "ValidWeightStableGross",
        "description": "Stable gross weight in grams (unit attached)",
        "input": "ST,GS    20.7g  \\r\\n",
        "expectedOutput": {
          "Status": "ST",
          "Mode": "GS",
          "W": 20.7,
          "Unit": "g"
        },
        "shouldSucceed": true
      },
      {
        "name": "ValidWeightUnstableNet",
        "description": "Unstable net weight in kg (unit attached)",
        "input": "US,NT    12.5kg  \\r\\n",
        "expectedOutput": {
          "Status": "US",
          "Mode": "NT",
          "W": 12.5,
          "Unit": "kg"
        },
        "shouldSucceed": true
      },
      {
        "name": "ValidWeightTare",
        "description": "Tare weight",
        "input": "ST,TR     0.5g  \\r\\n",
        "expectedOutput": {
          "Status": "ST",
          "Mode": "TR",
          "W": 0.5,
          "Unit": "g"
        },
        "shouldSucceed": true
      },
      {
        "name": "ValidWeightZero",
        "description": "Zero weight",
        "input": "ST,GS     0.0g  \\r\\n",
        "expectedOutput": {
          "Status": "ST",
          "Mode": "GS",
          "W": 0.0,
          "Unit": "g"
        },
        "shouldSucceed": true
      }
    ],
    "coverage": {
      "fields": "100%",
      "states": "100%",
      "errorPaths": "80%"
    }
  },

  "documentation": {
    "references": [
      "Device-08-TScaleNHB.md",
      "CODE_ANALYSIS_NLib.Serial.Devices.md"
    ],
    "logFiles": [
      "Documents/LuckyTex Devices/TScaleNHB/"
    ],
    "notes": [
      "This is a simple CSV-format protocol (similar to TScaleQHW)",
      "Data format: STATUS,MODE WEIGHTunit",
      "Example: 'ST,GS    20.7g  '",
      "KEY DIFFERENCE from TScaleQHW: Unit is attached to weight value (no space)",
      "STATUS values: ST=Stable, US=Unstable",
      "MODE values: GS=Gross, NT=Net, TR=Tare",
      "Weight is padded to 7 characters (left-aligned with spaces)",
      "Unit is attached directly to weight value (e.g., '20.7g' not '20.7 g')",
      "Parser must scan backwards to find where digits end and unit begins",
      "Weight has 1 decimal place precision",
      "Format comparison:",
      "  - TScaleQHW: 'ST,GS,   245.6 g' (space before unit)",
      "  - TScaleNHB: 'ST,GS    20.7g  ' (no space before unit)"
    ]
  },

  "migration": {
    "existingClass": "TScaleNHB.cs",
    "namespace": "NLib.Serial.Devices",
    "compatibility": "backward-compatible",
    "notes": "This definition matches existing C# implementation 1:1"
  }
}
